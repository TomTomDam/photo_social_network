@model SocialNetwork.Models.Photo

@{
    ViewBag.Title = "Create a new Photo";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Photos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.photoId)

        <div class="form-group" id="edit-label">
            @Html.LabelFor(model => model.title, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10" id="edit-field">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="edit-label">
            @Html.LabelFor(model => model.photoFilePath, "Upload Image", htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10" id="edit-field">

                <input class="upload-picture-input" type="file" name="image" />

                @*<img class="" src=""/>*@

                @Html.ValidationMessageFor(model => model.photoFilePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="edit-label">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10" id="edit-display">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="edit-label">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10" id="edit-display">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="edit-label">
            @Html.LabelFor(model => model.createdDate, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10" id="edit-display">
                @Html.EditorFor(model => model.createdDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.createdDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="edit-label">
            @Html.LabelFor(model => model.modifiedDate, htmlAttributes: new { @class = "col-form-label col-md-2" })
            <div class="col-md-10" id="edit-display">
                @Html.EditorFor(model => model.modifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modifiedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/Scripts/jquery.validate.date.js")
    @Scripts.Render("~/bundles/jqueryval")
}